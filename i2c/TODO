* Make sure the /proc registration code in i2c-core uses the same debugging
  code and other conventions as the rest of the file.
* Make especially i2c-core SMP-safe. This means: locks around all global
  variable access, especially during (de)registration activity.
* Use the defines in <linux/kernel.h> to classify printk commands 
  as informational, fatal, etc. Already done for some modules at some 
  places.
* Introduce version numbers for all modules, reported on insertion
* Check debugging levels in all modules are sane.
* Pretty-print everything as in the kernel code guidelines (found in 
  linux-x.y.x/Documentation)
* linux/Documentation/devices.txt lists i2c0, i2c1 etc. instead of i2c-0, i2c-1
* Find some solution for block reads in smbus-on-i2c emulation code
  We need a hack in the i2c level code for this :-(
* At least the bit-lp and bit-velle modules do no detection on loading;
  ask Simon whether this is possible to add.
* i2c-dev can't cope with mixed read/write I2C transactions. We need a
  new IOCTL which uses messages like the i2c_transfer function 
* MORE DOCUMENTATION!
