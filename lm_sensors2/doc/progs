This is a list of additional programs, that may or may not be installed by
`make install', and that usually can be found in the `prog' directory of
this package.

* prog/config/grab_busses.sh (written in bash and awk, not installed)
  This program helps you generate the `bus' statements for your configuration
  file. It read /proc/bus/i2c (or the file specified on the command-line),
  and prints to stdout `bus' statements reflecting the currently detected
  adapters.
* prog/daemon/healthd.sh (written in bash, not installed)
  An example of a very simple hardware health monitoring daemon.
* prog/detect/sensors-detect (written in Perl, installed by 'make install')
  This program tries to detect the available SMBus adapters and the chips
  connected to them and/or the ISA bus. It also generates modprobe lines
  and module options. This program is interactive and will ask you about
  all information it needs.
* prog/detect/i2cdetect (written in C, not installed)
  This program scans your complete I2C or SMBus adapter for connected devices.
  Not all devices can be detected in this way, though; and it may hang your
  bus. Syntax:
    ./i2cdetect 0
  Here the '0' stands for i2c-0 (check /proc/bus/i2c to find out which bus
  you need).
* prog/doc/doc-features.pl (written in Perl, not installed)
  This program is used to help us generate driver documentation; it scans
  some C source programs to do this. Syntax:
    ./doc-features.pl BASE [PREFIX...]
  BASE is the path to the base directory of the lm_sensors tree
  PREFIX is one of more prefixes of chips you want documented; if left out,
  all chips are documented.
* prog/doc/doc-insmod.pl (written in Perl, not installed)
  This program is used to help us generate driver documentation; it reads
  all module information and outputs insmod parameter information. Syntax:
    ./doc-insmod.pl DRIVER
* prog/dump/i2cdump (written in C, not installed)
  This program helps to dump the registers of a I2C device that understands
  the 'byte data' or 'word data' SMBus protocols. Usual syntax:
    ./i2cdump 0 0x49 b
  Here the '0' stands for i2c-0 (check /proc/bus/i2c to find out which bus
  you need), '0x49' is the device address, and 'b' or 'w' stands for byte
  or word data.
* prog/dump/isadump (written in C, not installed)
  This program helps to dump the registers of LM78-like chips, or more
  exactly, chips which use an I/O-port for its address and one as its
  data register. Usual syntax: 
     ./isadump 0x295 0x296
* prog/eeprom/decode-dimms.pl (written in Perl 5, not installed)
  This program decodes the information generated by the `eeprom.o' module.
  It will only work for the installed eeprom module from the src/ directory,
  not for the old one in the i2c/drivers/ directory.
* prog/mkdev/mkdev.sh (written in bash, not installed)
  This script creates the /dev/i2c-* files. Please check the source before
  you run it, as you may need to set some variables first.
* prog/sensors/sensors (written in C, installed by `make install')
  This pretty-prints the information provided by the modules. It is a normal
  console application, using stdin and stdout. It is essential, because
  unlike the raw /proc/sys/dev/sensors/*/* files, it takes your configuration
  file into account.
* prog/xeon/decode-xeon.pl (written in perl, not installed)
  ID ROM data decoding for Xeon processors.
